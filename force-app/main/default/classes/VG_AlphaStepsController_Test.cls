@IsTest(SeeAllData=False)
public class VG_AlphaStepsController_Test {
    public static testMethod void TestMethod1() {
        //Cover Constructor 
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer'); 
        Policy__c pol=VG_TU.createPolicy('Imara',acc.id);
        pol.VG_Inception_Date__c=Date.newInstance(2019, 12, 18);
        pol.VG_Expiry_Date__c=Date.newInstance(2020, 12, 18);
        pol.Type_of_Insurance__c = 'Treaty Reinsurance';
        pol.VG_Is_Renewal__c = false;
        update pol;        
        Endorsement_Library__c EL1=VG_TU.createEndorsementLibraryCustom('Imara','Sub-limits');
        Endorsement_Library__c EL2=VG_TU.createEndorsementLibraryCustom('Imara','Endorsements');
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.VG_Reinsurance_Type__c='Treaty';
        ps.VG_Structure__c='Proportional';
        ps.Product__c= 'Excess of Loss Per Risk';
        update ps;
        VG_Policy_Schedule_Asset__c rr=new VG_Policy_Schedule_Asset__c();
        rr.name='Test';
        rr.VG_Premium__c=15252;
        rr.VG_Policy_Schedule__c=ps.id;       
        rr.VG_Minimum_Premium__c=4521;
        Insert rr;
        System.debug('rr::'+rr);
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp=new VG_AlphaStepsController();
        alp.gotostep1();
        alp.Structure_Select ='Proportional';
        alp.Product_Select = 'Excess of Loss Per Risk';
        alp.rr.VG_Minimum_Premium__c=10;
        alp.rr.VG_Rate_on_Income__c=1500;
        alp.rr.VG_GNPI__c=452;
        alp.rr.VG_Deposit_Premium__c=14;
        alp.rr.VG_No_Claims_Bonus__c=4521;
        alp.rr.VG_Provisional_Rate__c=45;
        alp.RiskRatingCalc();
        alp.gotostep2();
        alp.gotostep3();       
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp1=new VG_AlphaStepsController();
        alp1.gotostep1();        
        alp1.Structure_Select ='Proportional';
        alp1.setProductList();
        alp1.Product_Select  = 'Aggregate Stop Loss';
        alp1.gotostep2();
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp3=new VG_AlphaStepsController();
        alp3.gotostep1();
        alp3.Structure_Select='Surplus';
        alp3.Product_Select = 'Quota Share';
        alp3.RateChange=0.00;
        alp3.gotostep2();
        alp3.RiskRatingCalc();
        alp3.RiskRatingCalc2();
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp4=new VG_AlphaStepsController();
        alp4.gotostep1();        
        alp4.RI_Select='--None--';
        alp4.Structure_Select='--None--';
        alp4.gotostep2();
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp5=new VG_AlphaStepsController();
        alp5.gotostep1();        
        alp5.Structure_Select='--None--';
        alp5.gotostep2();
        alp5.cancel();
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp2=new VG_AlphaStepsController();
        alp2.gotostep1();       
        alp2.RI_Select = 'Facultative Reinsurance'; 
        alp2.Structure_Select='Proportional';
        alp2.setProductList();
        alp2.Product_Select = 'Quota Share';
        alp2.rr.VG_Cession__c=15;
        alp2.rr.VG_Risk_Premium__c = 6000;
        alp2.rr.VG_Expected_Premium_Income__c=1545;
        alp2.rr.VG_Expected_Loss_Ratio__c=15;
        alp2.rr.VG_Ceding_Commission__c=1542;
        alp2.rr.VG_Retention_Line__c=4521;
        alp2.rr.VG_No_of_Surplus_Lines__c=15;
        alp2.RiskRatingCalc2();        
        alp2.gotostep2();
        alp2.rc.VG_No_of_Reinstatements__c = String.valueOf(5);
        alp2.generateReinstatement();
        alp2.gotostep3();
        alp2.gotostep4();
        alp2.gotostep5();
        alp2.gotostep5b();
         //Step 4 and 4b code
        //Step 5 and 5b code
        alp2.gotostep6();
        alp2.gotostep6b(); 
        alp2.AddCustom();
        alp2.SignedShare=15;
        alp2.GrossWrittenPremium=5000;
        alp2.TechnicalLossRatio=145;
        alp2.Brokerage=20;
        alp2.Overider=15;
        alp2.rr.VG_Limit__c=2500;
        alp2.rr.VG_Deductible__c=2000;
        alp2.rr.VG_Limit_Precent__c=150;
        alp2.rr.VG_Deductible_Precent__c=200;
        alp2.Calc();
        alp2.Finish();       
    }
    public static testMethod void TestMethod2() {
        //Cover Constructor 
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer'); 
        Policy__c pol=VG_TU.createPolicy('Imara',acc.id);
        Endorsement_Library__c EL1=VG_TU.createEndorsementLibraryCustom('Imara','Sub-limits');
        Endorsement_Library__c EL2=VG_TU.createEndorsementLibraryCustom('Imara','Endorsements');
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.VG_Reinsurance_Type__c='Treaty';
        ps.VG_Structure__c='Excess of Loss';
        update ps;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp1=new VG_AlphaStepsController();
        alp1.gotostep1();        
        alp1.RI_Select = 'Treaty Reinsurance';
        alp1.Structure_Select='Proportional';
        alp1.setProductList();
        alp1.Product_Select = 'Surplus';
        alp1.rc.VG_Rate_Type__c ='Flat Premium';
        alp1.gotostep2();
        alp1.RiskRatingCalc();
        alp1.RiskRatingCalc2();
        ApexPages.currentPage().getParameters().put('Id', pol.id);
        VG_AlphaStepsController alp2=new VG_AlphaStepsController();
        alp2.gotostep1();
        alp2.RI_Select = 'Facultative Reinsurance'; 
        alp2.Structure_Select = 'Non-Proportional';
        alp2.setProductList();
        alp2.RiskRatingCalc();
        alp2.RiskRatingCalc2();
        alp2.gotostep2();
        alp2.cancel();
        VG_AlphaStepsController alp=new VG_AlphaStepsController();
        alp.gotostep1();
        alp.RI_Select = 'Treaty Reinsurance'; 
        alp.Structure_Select = 'Non-Proportional';
        alp.setProductList();
        alp.rr.VG_Coverage__c = 'Motor;Liability;Agriculture;Health;Travel;PVT;Marine;Property Risk;Agriculture;Energy;Credit;Engineering;Aviation;';
        alp.setSubCoverageList();
        alp.RiskRatingCalc();
        alp.RiskRatingCalc2();
        alp.gotostep2();
        alp.rc.VG_No_of_Reinstatements__c = String.valueOf(2);
        alp.generateReinstatement();
        alp.gotostep3();
        alp.gotostep4();
        Endorsement_Library__c EL3=VG_TU.createEndorsementLibraryCustom('Affinity','Sub-limits');
        VG_Policy_Schedule_Endorsement__c pse=VG_TU.createPolicyScheduleEndorsement(ps.id);
        pse.VG_Premium__c=1500;
        update pse;
        alp.existingEndorsements1.add(pse);
        alp.gotostep5();
        alp.gotostep5b();
        alp.LibraryWrapperList1[0].IsSelected=True;
        alp.existingEndorsements1.add(pse);
        alp.gotostep5b();
        //Step 4 and 4b code
        //Step 5 and 5b code
        Endorsement_Library__c EL4=VG_TU.createEndorsementLibraryCustom('Affinity','Endorsements');
        VG_Policy_Schedule_Endorsement__c pse1=VG_TU.createPolicyScheduleEndorsement(ps.id);       
        alp.existingEndorsements.add(pse1);       
        alp.gotostep6();
        alp.gotostep6b(); 
        alp.LibraryWrapperList[0].IsSelected=True;
        alp.gotostep6b(); 
        alp.AddCustom();
        alp.gotostep4();
        System.debug('existingEndorsements::'+alp.existingEndorsements.size());
    }
}