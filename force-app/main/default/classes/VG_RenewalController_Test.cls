@IsTest(SeeAllData=False)
public class VG_RenewalController_Test {
    public static testMethod void TestMethod1(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Utilities.SkipMethods('Bridge Context');
        Policy__c pol=VG_TU.createPolicy('Aesir',acc.id);  
        System.debug('pol::'+pol.id+pol.Name);
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        System.debug('pol::'+pol.id+pol.Name);
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Edison Motor').getRecordTypeId();
        ps.Name = 'ASR/SPACE/02909/2/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        Insert ps;
        Policy_Schedule__c ps0 = new Policy_Schedule__c();
        ps0.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Aesir').getRecordTypeId();
        ps0.Name = pol.Name+'/PS/0';
        ps0.Policy__c = pol.id;  
        ps0.VG_Status__c = 'Draft';
        ps0.IPT__c = 500;
        ps0.Levies__c = 14;
        ps0.Limit__c=1000;
        ps0.ILF_Layer__c='Primary';
        ps0.Gross_or_Net_Premium__c  = 'Net';
        ps0.Premium_Adjustment__c = 5000;
        ps0.Premium_Adjustment_2__c=1000;
        ps0.Endorsement_Premium_Pro__c = 25000;
        ps0.Risk_Premium_Pro__c = 26000;
        ps0.VG_Brokerage_Percent__c = 12.5;
        ps0.VG_Fee_Income__c = 2000;
        ps0.Attachment__c=2000;
        ps0.Gross_Written_Premium__c = 500;
        ps0.Share__c = 20;
        ps0.VG_Overider_Percent__c = 16.9;
        Insert ps0;
        
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);    
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name=pol.Name+'/RD/1';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='Notice of Event Limit :2000<br>Proof of Loss Limit :2000<br>Payment after POL limit :2000<br>Sunset Clause :2000<br>Salvage Provisions :2000<br>CTL Provisions :2000<br>Loss Minimisation :2000<br>Power Margin :2000<br>Propellant Margin :2000<br>Loss Formula :2000<br>AVN 41/21:2000<br>';
        insert rc;
        Risk_Capture__c rc1 = VG_TU.createRiskCapture(ps1.id);
        Test.startTest();
        VG_RenewalController.createRenewalPolicy(pol.id, 'Aesir');
        Utilities.clearMethods();
        Test.stopTest();
    }
    public static testMethod void TestMethodGentium2(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Utilities.SkipMethods('Bridge Context');
        Policy__c pol=VG_TU.createPolicy('Gentium',acc.id);
        pol.VG_Inception_Date__c=Date.newInstance(2019, 12, 18);
        pol.VG_Expiry_Date__c=Date.newInstance(2020, 12, 18);
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;  
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.Product__c = 'Fleet';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Fee_Income__c = 25;
        ps.VG_VAT__c = 15.8;
        ps.VG_Overider_Percent__c = 16.9;
        Insert ps;
        
        Policy_Schedule__c ps0 = new Policy_Schedule__c();
        ps0.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        ps0.Name = pol.Name+'/PS/0';
        ps0.Policy__c = pol.id;  
        ps0.VG_Status__c = 'Draft';
        ps0.IPT__c = 500;
        ps0.Levies__c = 14;
        ps0.Limit__c=1000;
        ps0.ILF_Layer__c='Primary';
        ps0.Gross_or_Net_Premium__c  = 'Gross';
        ps0.Premium_Adjustment__c = 5000;
        ps0.Premium_Adjustment_2__c=1000;
        ps0.Endorsement_Premium_Pro__c = 25000;
        ps0.Risk_Premium_Pro__c = 26000;
        ps0.VG_Brokerage_Percent__c = 12.5;
        ps0.VG_Fee_Income__c = 2000;
        ps0.Attachment__c=2000;
        ps0.Gross_Written_Premium__c = 500;
        ps0.Share__c = 20;
        ps0.VG_Overider_Percent__c = 16.9;
        Insert ps0;
        
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        
        Policy_Schedule__c ps2 = ps0.clone(false,True,false,false);
        ps2.VG_Is_MTA__c=true;
        ps2.VG_MTA_Type__c='Revision of Cover';
        ps2.Name = pol.Name+'/PS/1';
        ps2.MTA_Parent_Policy_Schedule__c=ps0.id;
        insert ps2;
        
        VG_Policy_Schedule_Asset__c rr=new VG_Policy_Schedule_Asset__c();
        rr.Name =pol.Name+'/RR/1';
        rr.VG_Policy_Schedule__c=ps1.id;
        rr.VG_CH_Commission__c = 56;
        insert rr;
        
        VG_Policy_Schedule_Asset__c rr1=new VG_Policy_Schedule_Asset__c();
        rr1.Name =pol.Name+'/RR/1';
        rr1.VG_Policy_Schedule__c=ps2.id;
        rr1.VG_CH_Commission__c = 56;
        insert rr1;
        
        VG_Policy_Schedule_Endorsement__c pse=new VG_Policy_Schedule_Endorsement__c();
        pse.Name=pol.Name+'/PE/1';
        pse.VG_Policy_Schedule__c = ps1.id;
        pse.VG_Endorsement_Number__c = 'ss';
        insert pse;
        
        VG_Policy_Schedule_Endorsement__c pse1=new VG_Policy_Schedule_Endorsement__c();
        pse1.Name=pol.Name+'/PE/1';
        pse1.VG_Policy_Schedule__c = ps2.id;
        pse1.VG_Endorsement_Number__c = 'ss';
        insert pse1;
        
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name=pol.Name+'/RD/1';
        rc.Policy_Schedule__c=ps1.id;
        rc.VG_Additional_Information__c='Notice of Event Limit :2000<br>Proof of Loss Limit :2000<br>Payment after POL limit :2000<br>Sunset Clause :2000<br>Salvage Provisions :2000<br>CTL Provisions :2000<br>Loss Minimisation :2000<br>Power Margin :2000<br>Propellant Margin :2000<br>Loss Formula :2000<br>AVN 41/21:2000<br>';
        insert rc;
        Risk_Capture__c rc1 = VG_TU.createRiskCapture(ps2.id);
        Test.startTest();
        VG_RenewalController.createRenewalPolicy(pol.id, 'Gentium');
        Utilities.clearMethods();
        Test.stopTest();
    }
    public static testMethod void TestMethodVFP3(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Utilities.SkipMethods('Bridge Context');
        Policy__c pol=VG_TU.createPolicy('VFP',acc.id);
        pol.VG_Inception_Date__c=Date.newInstance(2019, 12, 18);
        pol.VG_Expiry_Date__c=Date.newInstance(2020, 12, 18);
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('VFP').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.Product__c = 'W&I';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Overider_Percent__c = 16.9;
        Insert ps;
        
        Policy_Schedule__c ps0 = new Policy_Schedule__c();
        ps0.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('VFP').getRecordTypeId();
        ps0.Name = pol.Name+'/ps0/0';
        ps0.Policy__c = pol.id;  
        ps0.VG_Status__c = 'Draft';
        ps0.IPT__c = 500;
        ps0.Levies__c = 14;
        ps0.Limit__c=1000;
        ps0.ILF_Layer__c='Primary';
        ps0.Gross_or_Net_Premium__c  = 'Gross';
        ps0.Premium_Adjustment__c = 5000;
        ps0.Premium_Adjustment_2__c=1000;
        ps0.Endorsement_Premium_Pro__c = 25000;
        ps0.Risk_Premium_Pro__c = 26000;
        ps0.VG_Brokerage_Percent__c = 12.5;
        ps0.VG_Fee_Income__c = 2000;
        ps0.Attachment__c=2000;
        ps0.Gross_Written_Premium__c = 500;
        ps0.Share__c = 20;
        ps0.VG_Overider_Percent__c = 16.9;
        Insert ps0;
        
        Policy_Schedule__c ps3 = new Policy_Schedule__c();
        ps3.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('VFP').getRecordTypeId();
        ps3.Name = pol.Name+'/ps3/0';
        ps3.Policy__c = pol.id;  
        ps3.VG_Status__c = 'Draft';
        ps3.Product__c = 'Cyber';
        ps3.IPT__c = 500;
        ps3.Levies__c = 14;
        ps3.Limit__c=1000;
        ps3.ILF_Layer__c='Primary';
        ps3.Gross_or_Net_Premium__c  = 'Gross';
        ps3.Premium_Adjustment__c = 5000;
        ps3.Premium_Adjustment_2__c=1000;
        ps3.Endorsement_Premium_Pro__c = 25000;
        ps3.Risk_Premium_Pro__c = 26000;
        ps3.VG_Brokerage_Percent__c = 12.5;
        ps3.VG_Fee_Income__c = 2000;
        ps3.Attachment__c=2000;
        ps3.Gross_Written_Premium__c = 500;
        ps3.Share__c = 20;
        ps3.VG_Overider_Percent__c = 16.9;
        Insert ps3;
        
        Policy_Schedule__c ps4 = new Policy_Schedule__c();
        ps4.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('VFP').getRecordTypeId();
        ps4.Name = pol.Name+'/ps4/0';
        ps4.Policy__c = pol.id;  
        ps4.VG_Status__c = 'Draft';
        ps4.Product__c = 'Combined Cyber/ Tech E&O';
        ps4.IPT__c = 500;
        ps4.Levies__c = 14;
        ps4.Limit__c=1000;
        ps4.ILF_Layer__c='Primary';
        ps4.Gross_or_Net_Premium__c  = 'Gross';
        ps4.Premium_Adjustment__c = 5000;
        ps4.Premium_Adjustment_2__c=1000;
        ps4.Endorsement_Premium_Pro__c = 25000;
        ps4.Risk_Premium_Pro__c = 26000;
        ps4.VG_Brokerage_Percent__c = 12.5;
        ps4.VG_Fee_Income__c = 2000;
        ps4.Attachment__c=2000;
        ps4.Gross_Written_Premium__c = 500;
        ps4.Share__c = 20;
        ps4.VG_Overider_Percent__c = 16.9;
        Insert ps4;
        
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        Policy_Schedule__c ps2 = ps0.clone(false,True,false,false);
        ps2.VG_Is_MTA__c=true;
        ps2.VG_MTA_Type__c='Revision of Cover';
        ps2.Name = pol.Name+'/PS/1';
        ps2.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps2;
        
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);    
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name=pol.Name+'/RD/1';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='Notice of Event Limit :2000<br>Proof of Loss Limit :2000<br>Payment after POL limit :2000<br>Sunset Clause :2000<br>Salvage Provisions :2000<br>CTL Provisions :2000<br>Loss Minimisation :2000<br>Power Margin :2000<br>Propellant Margin :2000<br>Loss Formula :2000<br>AVN 41/21:2000<br>';
        rc.VG_No_of_Reinstatements__c = String.valueOf(2);
        rc.VG_Reinstatement_Premiums__c = '1st Reinstatement:10<br>2nd Reinstatement:20<br>3rd Reinstatement:30<br>4th Reinstatement:40';
        insert rc;
        Risk_Capture__c rc1 = VG_TU.createRiskCapture(ps1.id);
        Test.startTest();
        VG_RenewalController.createRenewalPolicy(pol.id, 'VFP');
        Utilities.clearMethods();
        Test.stopTest();
    }
    
    public static testMethod void TestMethodImara4(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Imara',acc.id);
        pol.VG_Inception_Date__c=Date.newInstance(2019, 12, 18);
        pol.VG_Expiry_Date__c=Date.newInstance(2020, 12, 18);
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Imara').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.VG_Technical_Loss_Ratio__c = 10;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Overider_Percent__c = 16.9;
        
        Insert ps;
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);    
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name=pol.Name+'/RD/1';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='Notice of Event Limit :2000<br>Proof of Loss Limit :2000<br>Payment after POL limit :2000<br>Sunset Clause :2000<br>Salvage Provisions :2000<br>CTL Provisions :2000<br>Loss Minimisation :2000<br>Power Margin :2000<br>Propellant Margin :2000<br>Loss Formula :2000<br>AVN 41/21:2000<br>';
        rc.VG_No_of_Reinstatements__c = String.valueOf(2);
        rc.VG_No_of_Reinstatements__c = String.valueOf(2);
        insert rc;
        Risk_Capture__c rc1 = VG_TU.createRiskCapture(ps1.id);
        Test.startTest();
        VG_RenewalController.createRenewalPolicy(pol.id, 'Imara');
        Test.stopTest();
    }
    public static testMethod void TestMethodHorizon5(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Horizon',acc.id);
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Horizon').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Technical_Loss_Ratio__c = 10;
        ps.VG_Overider_Percent__c = 16.9;
        Insert ps;
        
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);    
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name=pol.Name+'/RD/1';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='Notice of Event Limit :2000<br>Proof of Loss Limit :2000<br>Payment after POL limit :2000<br>Sunset Clause :2000<br>Salvage Provisions :2000<br>CTL Provisions :2000<br>Loss Minimisation :2000<br>Power Margin :2000<br>Propellant Margin :2000<br>Loss Formula :2000<br>AVN 41/21:2000<br>';
        rc.VG_No_of_Reinstatements__c = String.valueOf(2);
        insert rc;
        Risk_Capture__c rc1 = VG_TU.createRiskCapture(ps1.id);
        Test.startTest();
        VG_RenewalController.createRenewalPolicy(pol.id,'Horizon');
        Test.stopTest();
    }
    public static testMethod void TestMethodAffinity6(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Affinity',acc.id);
        pol.VG_Inception_Date__c=Date.newInstance(2019, 12, 18);
        pol.VG_Expiry_Date__c=Date.newInstance(2020, 12, 18);
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Affinity').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Overider_Percent__c = 16.9;
        Insert ps;
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);    
        Risk_Capture__c rc=new Risk_Capture__c();
        rc.Name=pol.Name+'/RD/1';
        rc.Policy_Schedule__c=ps.id;
        rc.VG_Additional_Information__c='Notice of Event Limit :2000<br>Proof of Loss Limit :2000<br>Payment after POL limit :2000<br>Sunset Clause :2000<br>Salvage Provisions :2000<br>CTL Provisions :2000<br>Loss Minimisation :2000<br>Power Margin :2000<br>Propellant Margin :2000<br>Loss Formula :2000<br>AVN 41/21:2000<br>';
        insert rc;
        Risk_Capture__c rc2=rc.clone(false,true,false,false);
        insert rc2;
        Test.startTest();
        VG_RenewalController.createRenewalPolicy(pol.id, 'Affinity');
        Test.stopTest();
    }
    
    public Static Testmethod Void CatchblockTestmethod(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createCustomPolicy('Imara', acc.id); 
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        VG_Functionality_Switches__c cs2 = VG_Functionality_Switches__c.getInstance();
        System.debug('check::'+cs2+':'+cs2.Skip_Validation__c);
        VG_Functionality_Switches__c cs = VG_Functionality_Switches__c.getOrgDefaults();
        cs.Skip_Validation__c = True;
        Insert cs;
        System.debug('skip::'+cs.Skip_Validation__c);
        List<VG_Validations__c> valList = new List<VG_Validations__c>();
        VG_Validations__c val = new VG_Validations__c();
        val.Name = 'Policy_23_Bridge';
        val.VG_Field_API__c ='VG_LTA__c';
        val.VG_Field_Label__c='LTA flag';
        val.VG_Level__c='Policy';
        val.VG_Policy_Status__c='Prospect';
        val.VG_RecordTypeName__c='Imara';
        val.VG_Type__c='Null check';
        val.VG_Value__c='';
        valList.add(val);
		       
        Insert valList;
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Imara').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Technical_Loss_Ratio__c = 10;
        ps.VG_Overider_Percent__c = 16.9;
        Insert ps;
        
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        
        System.debug('e.getMessage()::'+pol.VG_Ignore_Validation__c+pol.Policy_Status__c);
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id); 
        VG_Policy_Schedule_Endorsement__c pse=VG_TU.createPolicyScheduleEndorsement(ps.id);        
        Risk_Capture__c rc = VG_TU.createRiskCapture(ps.id);        
        Test.startTest();
        cs.Skip_Validation__c = false;
        update cs;
        VG_RenewalController.createRenewalPolicy(pol.id,'Imara');
        Test.stopTest();
    }
    
    public Static Testmethod Void CatchblockTestmethod2(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createCustomPolicy('Horizon', acc.id); 
        pol.Name = 'ASR/SPACE/02909/2';
        update pol;
        VG_Functionality_Switches__c cs2 = VG_Functionality_Switches__c.getInstance();
        System.debug('check::'+cs2+':'+cs2.Skip_Validation__c);
        VG_Functionality_Switches__c cs = VG_Functionality_Switches__c.getOrgDefaults();
        cs.Skip_Validation__c = True;
        Insert cs;
        System.debug('skip::'+cs.Skip_Validation__c);
        List<VG_Validations__c> valList = new List<VG_Validations__c>();
        
		VG_Validations__c val1 = new VG_Validations__c();
        val1.Name = 'CBDX_HOZ1';
        val1.VG_Field_API__c ='VG_UMR__c';
        val1.VG_Field_Label__c='UMR';
        val1.VG_Level__c='Capacity Bordereaux';
        val1.VG_Policy_Status__c='Prospect';
        val1.VG_RecordTypeName__c='Horizon';
        val1.VG_Type__c='Null check';
        val1.VG_Value__c='';
        valList.add(val1);        
        Insert valList;
        Policy_Schedule__c ps = new Policy_Schedule__c();
        ps.RecordTypeId = Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Horizon').getRecordTypeId();
        ps.Name = pol.Name+'/PS/0';
        ps.Policy__c = pol.id;  
        ps.VG_Status__c = 'Draft';
        ps.IPT__c = 500;
        ps.Levies__c = 14;
        ps.Limit__c=1000;
        ps.ILF_Layer__c='Primary';
        ps.Gross_or_Net_Premium__c  = 'Gross';
        ps.Premium_Adjustment__c = 5000;
        ps.Premium_Adjustment_2__c=1000;
        ps.Endorsement_Premium_Pro__c = 25000;
        ps.Risk_Premium_Pro__c = 26000;
        ps.VG_Brokerage_Percent__c = 12.5;
        ps.VG_Fee_Income__c = 2000;
        ps.Attachment__c=2000;
        ps.Gross_Written_Premium__c = 500;
        ps.Share__c = 20;
        ps.VG_Technical_Loss_Ratio__c = 10;
        ps.VG_Overider_Percent__c = 16.9;
        Insert ps;
        
        Policy_Schedule__c ps1 = ps.clone(false,True,false,false);
        ps1.VG_Is_MTA__c=true;
        ps1.VG_MTA_Type__c='Revision of Cover';
        ps1.Name = pol.Name+'/PS/1';
        ps1.MTA_Parent_Policy_Schedule__c=ps.id;
        insert ps1;
        
        System.debug('e.getMessage()::'+pol.VG_Ignore_Validation__c+pol.Policy_Status__c);
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id); 
        VG_Policy_Schedule_Endorsement__c pse=VG_TU.createPolicyScheduleEndorsement(ps.id);        
        Risk_Capture__c rc = VG_TU.createRiskCapture(ps.id);        
        Test.startTest();
        cs.Skip_Validation__c = false;
        update cs;
        VG_RenewalController.createRenewalPolicy(pol.id,'Horizon');
        Test.stopTest();
    }
}