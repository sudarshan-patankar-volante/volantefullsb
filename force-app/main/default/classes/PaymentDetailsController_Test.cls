@IsTest(SeeAllData=False)
public class PaymentDetailsController_Test {
    public static testMethod void TestMethod1() {
        VG_TU.policyCustomSetting();
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override \n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency \n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Horizon',acc.id);
        pol.Terms_of_Trade_Days__c=70;
        update pol;
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Horizon').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.Gross_Written_Premium__c=500;
        ps.VG_MTA_Type__c=null;
        ps.Transaction_GWP__c=0;
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        Insert ps;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);
        rr.VG_Deposit_Premium__c=null;
        update rr;
        VG_Payment_Frequency__c pm=new VG_Payment_Frequency__c();
        pm.Name='Test';
        pm.VG_Policy_Schedule__c=ps.id;
        pm.VG_Payment_Percent__c=40;
        pm.VG_GWP_This_Time__c=150;
        pm.VG_Is_Temp_Delete__c=False;
        pm.VG_Due_Date__c=Date.newInstance(2027, 8, 1);
        Insert pm;
        System.debug('pm::'+pm);
        VG_Payment_Frequency__c pf=VG_TU.createPaymentFrequency(ps.id);                       
        VG_Taxes__c tx=new VG_Taxes__c();
        tx.Name='test';
        tx.VG_Policy_Schedule__c=ps.id;
        tx.VG_Taxable_Amount__c=4500;
        tx.VG_Tax_Percent__c=45;
        tx.VG_Tax_Administered_By__c='Broker';
        tx.VG_Tax_Paid_By__c='Insurer';        
        Insert tx;
        PaymentDetailsController controller;        
        PageReference pageRef = Page.VG_Payment_Details;
        Test.setCurrentPage(pageRef);
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        controller=new PaymentDetailsController(); 
        controller.fileBody = Blob.valueOf('Due Date,Payment (%),Comment,Currency\n20-08-2018,50,sgsaf,USD\n');        
        controller.processUploadPF();        
        PaymentDetailsController pc=new PaymentDetailsController(); 
        pc.pfcounter=0;
        pc.addPaymentFrequency();
        pc.uploadPF();
        pc.uploadTax();
        pc.processUploadPF();
        pc.thisTimeGWPOR();
        pc.finish();
        rr.VG_Deposit_Premium__c=5000;
        update rr;
        pc.processUploadPF();
        pc.thisTimeGWPOR();
        pc.finish();              
    }
    public static testMethod void TestMethod4() {
        VG_TU.policyCustomSetting();
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override \n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency \n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Imara',acc.id);
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Imara').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.Gross_Written_Premium__c=500;
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        Insert ps;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);
        rr.VG_Deposit_Premium__c=5000;
        update rr;
        VG_Payment_Frequency__c pm=new VG_Payment_Frequency__c();
        pm.Name='Test';
        pm.VG_Policy_Schedule__c=ps.id;
        //pm.VG_Payment_Percent__c=40;
        pm.VG_Is_Temp_Delete__c=False;
        //pm.VG_Due_Date__c=Date.newInstance(2027, 8, 1);
        Insert pm;
        VG_Payment_Frequency__c pf=VG_TU.createPaymentFrequency(ps.id);               
        
        VG_Taxes__c tx=new VG_Taxes__c();
        tx.Name='test';
        tx.VG_Policy_Schedule__c=ps.id;
        tx.VG_Taxable_Amount__c=4500;
        tx.VG_Tax_Percent__c=45;
        tx.VG_Tax_Administered_By__c='Insured';
        tx.VG_Tax_Paid_By__c='Insurer';               
        Insert tx;
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        PaymentDetailsController pc=new PaymentDetailsController(); 
        pc.pfcounter=0;
        pc.addPaymentFrequency();
        pc.thisTimeGWP();
        pc.finish();
    }
    public static testMethod void TestMethod2() {
        VG_TU.policyCustomSetting();
        Test.startTest();
        Utilities.SkipMethods('Bridge Context');
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override \n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d2=new Document();
        d2.Name='Tax Upload Template VFP';
        d2.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Amount 100%,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override \n');      
        d2.FolderId='0050O0000078Mug';
        Insert d2;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency \n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        acc.Terms__c='60';
        update acc;        
        Account baa=new Account();
        baa.Name='Broker Test';
        baa.RecordTypeId=Schema.SObjectType.Account.getRecordTypeInfosByName().get('Broker').getRecordTypeId();       
        baa.Intermediary_Role__c='Local Brokers';
        baa.VG_Intermediary_Number__c='test123';
        baa.Broker_Type__c='Insurance'; 
        baa.Broker_Distribution__c='Direct';            
        baa.Regulatory_Check__c=true;
        baa.VG_TOBA_Uploaded__c=true;
        baa.Terms__c='90';
        Insert baa;    
        Policy__c pol=VG_TU.createPolicy('VFP',acc.id);
        pol.Broker_Name__c=baa.Id;  
        update pol;
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('VFP').getRecordTypeId();
        ps.VG_MTA_Type__c='Extension';
        ps.VG_MTA_Start_Date__c=Date.newInstance(2019, 12, 18);
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        update ps;       
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);
        VG_Payment_Frequency__c pm=new VG_Payment_Frequency__c();
        pm.Name='Test';
        pm.VG_Policy_Schedule__c=ps.id;
        pm.VG_Payment_Percent__c=50;
        Insert pm;
        VG_Taxes__c tx=new VG_Taxes__c();
        tx.Name='test';
        tx.VG_Policy_Schedule__c=ps.id;
        tx.VG_Taxable_Amount__c=4500;
        tx.VG_Tax_Percent__c=45;
        tx.VG_Tax_Administered_By__c='Insurer';
        tx.VG_Tax_Paid_By__c='Insured';
        Insert tx;
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        PaymentDetailsController pc=new PaymentDetailsController();   
        pc.pfcounter=1;
        pc.addPaymentFrequency();
        pc.RemovePF();
        pc.addTax();  
        pc.RemoveTax();
        pc.finish();
        pc.cancel();
        PaymentDetailsController controller1;        
        PageReference pageRef1 = Page.VG_Payment_Details;
        Test.setCurrentPage(pageRef1);
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        controller1=new PaymentDetailsController(); 
        controller1.fileBody = Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Amount GWP 100%,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override\nTax1,10,2000,,500,Australia,Insurer,Insured,adsad,Y\n');        
        controller1.processUploadTax();        
        PaymentDetailsController pc1=new PaymentDetailsController(); 
        pc1.pfcounter=0;
        pc1.addPaymentFrequency();
        pc1.uploadPF();
        pc1.uploadTax();
        pc1.processUploadPF();
        pc1.thisTimeGWPOR();
        pc1.finish();
        Utilities.clearMethods();
        Test.stopTest();
    }
     public static testMethod void TestMethod3() {
        VG_TU.policyCustomSetting();
        Test.startTest();
        Utilities.SkipMethods('Bridge Context');
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override \n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency \n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        acc.Terms__c='60';
        update acc;
        Policy__c pol=VG_TU.createPolicy('Affinity',acc.id);
        pol.Terms_of_Trade_Days__c=70;
        update pol;
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Affinity').getRecordTypeId();
        ps.VG_MTA_Type__c='Reduction';
        ps.VG_MTA_Reduction_Date__c=Date.newInstance(2017, 12, 18);
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        update ps;
        VG_Policy_Schedule_Asset__c rr=VG_TU.createPolicyScheduleAsset(ps.id);
        VG_Payment_Frequency__c pm=new VG_Payment_Frequency__c();
        pm.Name='Test';
        pm.VG_Policy_Schedule__c=ps.id;
        pm.VG_Payment_Percent__c=100;
        pm.VG_GWP_This_Time__c=500;
        Insert pm;
        VG_Taxes__c tx=new VG_Taxes__c();
        tx.Name='test';
        tx.VG_Policy_Schedule__c=ps.id;
        tx.VG_Taxable_Amount__c=4500;
        tx.VG_Tax_Percent__c=45;
        tx.VG_Tax_Administered_By__c='Insured';
        tx.VG_Tax_Paid_By__c='Insurer';       
        Insert tx;
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        PaymentDetailsController pc=new PaymentDetailsController();   
        pc.pfcounter=1;
        pc.addPaymentFrequency();
        pc.RemovePF();
        pc.addTax();  
        pc.finish();
        Test.stopTest(); 
    }
    public static testMethod void TestMethod5() {
        VG_TU.policyCustomSetting();
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override \n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency \n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Edison Motor',acc.id);
        pol.Terms_of_Trade_Days__c=70;
        update pol;
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Edison Motor').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.Gross_Written_Premium__c=500;
        ps.Transaction_GWP__c=0;
        ps.VG_MTA_Type__c='Extension';
        ps.VG_MTA_Start_Date__c=Date.newInstance(2019, 12, 18);
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        Insert ps;
        VG_Payment_Frequency__c pm=new VG_Payment_Frequency__c();
        pm.Name='Test';
        pm.VG_Policy_Schedule__c=ps.id;
        pm.VG_Payment_Percent__c=40;
        pm.VG_GWP_This_Time__c=150;
        pm.VG_Is_Temp_Delete__c=False;
        pm.VG_Due_Date__c=Date.newInstance(2027, 8, 1);
        pm.VG_Is_Temp_Delete__c=false;
        Insert pm;
        System.debug('pm::'+pm);
        VG_Payment_Frequency__c pf=VG_TU.createPaymentFrequency(ps.id);                       
        VG_Taxes__c tx=new VG_Taxes__c();
        tx.Name='test';
        tx.VG_Policy_Schedule__c=ps.id;
        tx.VG_Taxable_Amount__c=4500;
        tx.VG_Tax_Administered_By__c='Insurer';
        tx.VG_Tax_Percent__c=45;
        Insert tx;
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        PaymentDetailsController pc=new PaymentDetailsController(); 
        pc.pfcounter=0;
        pc.addPaymentFrequency();
        pc.addTax();
        pc.thisTimeGWP();
        pc.finish();
    }
    public static testMethod void TestMethod6() {
        VG_TU.policyCustomSetting();
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override\nTax1,10,2000,,Australia,Insurer,Insured,adsad,Y\n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency \n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Gentium',acc.id);
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.Gross_Written_Premium__c=500;
        ps.Transaction_GWP__c=0;
        ps.VG_MTA_Type__c='Reduction';
        ps.VG_MTA_Reduction_Date__c=Date.newInstance(2017, 12, 30);
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        Insert ps;
        VG_Payment_Frequency__c pf1=VG_TU.createPaymentFrequency(ps.id);
        VG_Payment_Frequency__c pf=new VG_Payment_Frequency__c();
        pf.Name='test';
        pf.VG_Policy_Schedule__c=ps.id;
        pf.VG_Due_Date__c=Date.newInstance(2019, 7, 6);
        pf.VG_GWP_This_Time__c=4500;
        pf.VG_Payment_Percent__c=50;
        Insert pf;
        PaymentDetailsController controller;        
        PageReference pageRef = Page.VG_Payment_Details;
        Test.setCurrentPage(pageRef);
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        controller=new PaymentDetailsController(); 
        controller.fileBody = Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override\nTax1,10,2000,,Australia,Insured,Insurer,adsad,Y\nTax1,10,2000,,Australia,Broker,Insurer,adsad,Y\nTax1,10,2000,,Australia,Insurer,Insured,adsad,Y\n');        
        controller.processUploadTax();        
        PaymentDetailsController pc=new PaymentDetailsController(); 
        pc.pfcounter=0;
        pc.addPaymentFrequency();
        pc.uploadPF();
        pc.uploadTax();
        pc.processUploadPF();
        pc.thisTimeGWPOR();
        //pc.finish();
    }
    public static testMethod void TestMethod7() {
        VG_TU.policyCustomSetting();
        Document d=new Document();
        d.Name='Tax Upload Template';
        d.Body=Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override\nTax1,10,2000,,Australia,Insurer,Insured,adsad,Y\n');      
        d.FolderId='0050O0000078Mug';
        Insert d;
        Document d1=new Document();
        d1.Name='Payment Frequency Upload Template';
        d1.Body=Blob.valueOf('Due Date,Payment (%),Comment,Currency\n20-08-2018,50,sgsaf,USD\n');      
        d1.FolderId='0050O0000078Mug';
        Insert d1;
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Bridge',acc.id);
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Bridge').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.Gross_Written_Premium__c=500;
        ps.Transaction_GWP__c=0;
        ps.VG_MTA_Type__c='Cancellation';
        ps.VG_MTA_Cancellation_Date__c=Date.newInstance(2017, 12, 30);
        ps.Net_Premium__c = 5000; 
        ps.Share__c = 100;
        Insert ps;
        VG_Payment_Frequency__c pf1=VG_TU.createPaymentFrequency(ps.id);
        
        PaymentDetailsController controller;        
        PageReference pageRef = Page.VG_Payment_Details;
        Test.setCurrentPage(pageRef);
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        controller=new PaymentDetailsController(); 
        controller.fileBody = Blob.valueOf('Due Date,Payment (%),Comment,Currency\n20-08-2018,50,sgsaf,USD\n28-08-2018,50,sgsaf,USD\n');        
        controller.processUploadPF();        
        PaymentDetailsController pc=new PaymentDetailsController(); 
        pc.pfcounter=0;
        pc.addPaymentFrequency();
        pc.uploadPF();
        pc.uploadTax();
        pc.processUploadPF();
        pc.thisTimeGWPOR();
        pc.finish();
        PaymentDetailsController controller1;        
        PageReference pageRef1 = Page.VG_Payment_Details;
        Test.setCurrentPage(pageRef1);
        ApexPages.currentPage().getParameters().put('Id', ps.id);
        controller1=new PaymentDetailsController(); 
        controller.fileBody = Blob.valueOf('Tax Type,Tax (%),Taxable Amount,Tax Amount,Tax Jurisdcition,Tax Administered By,Tax Paid By,Comment,Override\nTax1,10,2000,,Australia,Insured,Insurer,adsad,Y\nTax1,10,2000,,Australia,Broker,Insurer,adsad,Y\nTax1,10,2000,,Australia,Insurer,Insured,adsad,Y');        
        controller1.processUploadTax();        
        PaymentDetailsController pc1=new PaymentDetailsController(); 
        pc1.pfcounter=0;
        pc1.addPaymentFrequency();
        pc1.uploadPF();
        pc1.RemovePF();
        pc1.uploadTax();
        pc1.processUploadPF();
        pc1.thisTimeGWPOR();
        pc1.doneUploadPF();
        pc1.doneUploadTax();
        pc1.downloadAllTaxes();
        pc1.finish();
    }
}