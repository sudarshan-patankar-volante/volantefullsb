@isTest(SeeAllData = false)
public class VG_ReviseGentiumSteps_Controller_Test {
    public static testmethod void testmethod2(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Gentium',acc.id);
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.VG_Status__c='Draft';
        ps.IPT__c=500;
        Insert ps;
        List<Risk_Capture__c> rcList=new List<Risk_Capture__c>();
        Risk_Capture__c rc=VG_TU.createRiskCapture(ps.id);
        Risk_Capture__c rc1=VG_TU.createRiskCapture(ps.id);
        rcList.add(rc);
        rcList.add(rc1);
        Endorsement_Library__c el1=VG_TU.createEndorsementLibrary();
        Endorsement_Library__c el5=new Endorsement_Library__c();
        el5.Endorsement_Title__c='test';
        el5.Type__c='Endorsements';
        el5.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        Insert el5;       
        VG_Policy_Schedule_Asset__c psa=new VG_Policy_Schedule_Asset__c();
        psa.Name='test';
        psa.VG_Policy_Schedule__c=ps.id;
        psa.VG_IsTempDelete__c=false;
        psa.VG_Base_Premium__c=4522;
        insert psa;
        ApexPages.currentPage().getParameters().put('PSId', ps.id);
        ApexPages.currentPage().getParameters().put('MTAType', 'Revision of Cover');
        ApexPages.currentPage().getParameters().put('MTAStartDate', String.ValueOf(Date.newInstance(2017, 12, 18)));
        ApexPages.currentPage().getParameters().put('MTAEndDate', String.ValueOf(Date.newInstance(2018, 12, 18)));
        ApexPages.StandardController stdController1 = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen=new VG_ReviseGentiumSteps_Controller(stdController1);
        VG_Policy_Schedule_Endorsement__c pse1=VG_TU.createPolicyScheduleEndorsement(ps.id);
        VG_Policy_Schedule_Endorsement__c pse2=VG_TU.createPolicyScheduleEndorsement(ps.id);
        Endorsement_Library__c el2=VG_TU.createEndorsementLibrary();
        pse2.VG_Endorsement_Library_Id__c=el2.id;
        update pse2;
        ApexPages.StandardController stdController = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen1=new VG_ReviseGentiumSteps_Controller(stdController);
        VG_ReviseGentiumSteps_Controller.WrapperAsset wsa =new VG_ReviseGentiumSteps_Controller.WrapperAsset();        
        VG_ReviseGentiumSteps_Controller.LibraryWrapper lw =new VG_ReviseGentiumSteps_Controller.LibraryWrapper();
        lw.el=el5;
        lw.isSelected=true;
        rgen1.LibraryWrapperList.add(lw);
        rgen1.Index='0';
        rgen1.RemoveAsset();
        rgen1.previous();
        rgen1.addAsset();
        rgen1.AddRisk();
        rgen1.RemoveRisk();
        rgen1.Cancel();
        rgen1.AddCustom();
        rgen1.Nexta();
        lw.isSelected=false;
        rgen1.LibraryWrapperList.add(lw);
        rgen1.MTAType='Extension';
        rgen1.Nexta();
        rgen1.Nextb();
        rgen1.MTAType=null;
        rgen1.Nextb();
        rgen1.NextPSA();
        rgen1.psa.VG_Premium__c =12;
        rgen1.psa.VG_Vehicle_Type__c = 'Commercial Vehicles upto 3.5t';
        rgen1.psa.VG_Coverage__c = 'CAR';
        rgen1.psa.VG_Use__c = 'Private Hire';
        rgen1.psa.VG_Rate_Per_Vehicle__c = 43;
        rgen1.psa.VG_Number_of_Vehicles__c =1;
        rgen1.psa.VG_Technical_UW_Rate_Annual__c =21;
        rgen1.psa.Technical_UW_Premium__c =34;
        rgen1.NextPSA();
        rgen1.NextRC();
        rgen1.Previousa();
        rgen1.Previousb();
        rgen1.previous4();
        rgen1.RemoveCustom();
        rgen1.EditRisk();
        System.debug('psa::'+rgen1.waList);
        for(VG_ReviseGentiumSteps_Controller.WrapperAsset wa : rgen1.waList){
            wa.psa.VG_Policy_Schedule__c=ps.id;
        }
        
       
    }
    public static testmethod void TestMethod3(){
        Declaration_Rates__c dr =new Declaration_Rates__c();
        dr.Name='Edison_Motor';
        dr.Q1_Declaration_Rate__c=87.50;
        dr.Q2_Declaration_Rate__c=62.50;
        dr.Q3_Declaration_Rate__c=37.50;
        dr.Q4_Declaration_Rate__c=12.50;
        dr.Annual_Declaration_Rate__c=50;
        insert dr;
        VG_TU.policyCustomSetting();
        Utilities.SkipMethods('Bridge Context');        
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Gentium',acc.id);
        Policy_Schedule__c ps=VG_TU.createPolicySchedule(pol.id);
        ps.VG_Declaration_Type_percent__c=15;
        update ps;
        List<Risk_Capture__c> rcList=new List<Risk_Capture__c>();
        Risk_Capture__c rc=VG_TU.createRiskCapture(ps.id);
        Risk_Capture__c rc1=VG_TU.createRiskCapture(ps.id);
        rcList.add(rc);
        rcList.add(rc1);
        Endorsement_Library__c el1=VG_TU.createEndorsementLibrary();
        VG_Policy_Schedule_Asset__c psa=VG_TU.createPolicyScheduleAsset(ps.id);
        VG_Policy_Schedule_Asset__c psa1=VG_TU.createPolicyScheduleAsset(ps.id);
        ApexPages.currentPage().getParameters().put('PSId', ps.id);
        ApexPages.currentPage().getParameters().put('id', pol.id); 
        ApexPages.StandardController stdController1 = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen3=new VG_ReviseGentiumSteps_Controller(stdController1);        
        VG_Policy_Schedule_Endorsement__c pse1=VG_TU.createPolicyScheduleEndorsement(ps.id);
        VG_Policy_Schedule_Endorsement__c pse2=VG_TU.createPolicyScheduleEndorsement(ps.id);
        Endorsement_Library__c el2=VG_TU.createEndorsementLibrary();
        pse2.VG_Endorsement_Library_Id__c=el2.id;
        update pse2;
        ApexPages.StandardController stdController = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen=new VG_ReviseGentiumSteps_Controller(stdController);
        VG_ReviseGentiumSteps_Controller.LibraryWrapper lw =new VG_ReviseGentiumSteps_Controller.LibraryWrapper();
        lw.el=el1;
        lw.isSelected=true;
        rgen.LibraryWrapperList.add(lw);
        rgen.Index='0';
        rgen.RemoveAsset();
        rgen.previous();
        rgen.addAsset();
        rgen.AddRisk();
        rgen.RemoveRisk();
        rgen.Cancel();
        rgen.AddCustom();
        rgen.Nexta();
        lw.isSelected=false;
        rgen.LibraryWrapperList.add(lw);
        rgen.MTAType='Extension';
        rgen.Nexta();
        rgen.Nextb();
        rgen.MTAType=null;
        rgen.Nextb();
        rgen.NextPSA();
        rgen.NextRC();
        rgen.updateDeclarationRate();
        rgen.ps.VG_Declaration_Type__c = '1st Quarter';
        rgen.updateDeclarationRate();
        rgen.ps.VG_Declaration_Type__c = '2nd Quarter';
        rgen.updateDeclarationRate();
        rgen.ps.VG_Declaration_Type__c = '3rd Quarter';
        rgen.updateDeclarationRate();
        rgen.ps.VG_Declaration_Type__c = '4th Quarter';
        rgen.updateDeclarationRate();
        rgen.ps.VG_Declaration_Type__c = 'Annual';
        rgen.updateDeclarationRate();
        rgen.Previousa();
        rgen.Previousb();
        for(VG_ReviseGentiumSteps_Controller.WrapperAsset wa : rgen.waList){
            wa.psa.VG_Policy_Schedule__c=ps.id;
        }
        rgen.Finish();
        Utilities.clearMethods();
    }
    public static testmethod void TestMethod4(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Gentium',acc.id);
        Policy_Schedule__c ps=new Policy_Schedule__c();
        ps.RecordTypeId=Schema.SObjectType.Policy_Schedule__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        ps.Name='Test';
        ps.Policy__c=pol.id;  
        ps.VG_Status__c='Draft';
        ps.IPT__c=500;
        Insert ps;
        List<Risk_Capture__c> rcList=new List<Risk_Capture__c>();
        Risk_Capture__c rc=VG_TU.createRiskCapture(ps.id);
        Risk_Capture__c rc1=VG_TU.createRiskCapture(ps.id);
        rcList.add(rc);
        rcList.add(rc1);
        Endorsement_Library__c el1=VG_TU.createEndorsementLibrary();
        Endorsement_Library__c el5=new Endorsement_Library__c();
        el5.Endorsement_Title__c='test';
        el5.Type__c='Endorsements';
        el5.RecordTypeId=Schema.SObjectType.Endorsement_Library__c.getRecordTypeInfosByName().get('Gentium').getRecordTypeId();
        Insert el5;       
        VG_Policy_Schedule_Asset__c psa=new VG_Policy_Schedule_Asset__c();
        psa.Name='test';
        psa.VG_Policy_Schedule__c=ps.id;
        psa.VG_IsTempDelete__c=false;
        psa.VG_Base_Premium__c=4522;
        insert psa;
        ApexPages.currentPage().getParameters().put('PSId', NULL);
        ApexPages.currentPage().getParameters().put('id', pol.id); 
        ApexPages.currentPage().getParameters().put('OriginalId', ps.id);
        ApexPages.currentPage().getParameters().put('MTAType', 'Extension');
        ApexPages.StandardController stdController1 = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen=new VG_ReviseGentiumSteps_Controller(stdController1);
        VG_Policy_Schedule_Endorsement__c pse1=VG_TU.createPolicyScheduleEndorsement(ps.id);
        VG_Policy_Schedule_Endorsement__c pse2=VG_TU.createPolicyScheduleEndorsement(ps.id);
        Endorsement_Library__c el2=VG_TU.createEndorsementLibrary();
        pse2.VG_Endorsement_Library_Id__c=el2.id;
        update pse2;
        ApexPages.StandardController stdController = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen1=new VG_ReviseGentiumSteps_Controller(stdController);
        VG_ReviseGentiumSteps_Controller.WrapperAsset wsa =new VG_ReviseGentiumSteps_Controller.WrapperAsset();        
        VG_ReviseGentiumSteps_Controller.LibraryWrapper lw =new VG_ReviseGentiumSteps_Controller.LibraryWrapper();
        lw.el=el5;
        lw.isSelected=true;
        rgen1.LibraryWrapperList.add(lw);
        rgen1.Index='0';
        rgen1.RemoveAsset();
        rgen1.Nexta();
        lw.isSelected=false;
        rgen1.LibraryWrapperList.add(lw);
        rgen1.MTAType='Extension';
        rgen1.Nexta();
        rgen1.Nextb();
        rgen1.MTAType=null;
        rgen1.Nextb();
        rgen1.NextPSA();
        rgen1.RemoveCustom();
        System.debug('psa::'+rgen1.waList);
        for(VG_ReviseGentiumSteps_Controller.WrapperAsset wa : rgen1.waList){
            wa.psa.VG_Policy_Schedule__c=ps.id;
        }
    }
    public static testmethod void TestMethod5(){
        VG_TU.policyCustomSetting();
        Account acc=VG_TU.createAccount('Customer');
        Policy__c pol=VG_TU.createPolicy('Gentium',acc.id);
        Policy_Schedule__c ps=VG_Tu.createPolicySchedule(pol.id);
        List<Risk_Capture__c> rcList=new List<Risk_Capture__c>();
        Risk_Capture__c rc=VG_TU.createRiskCapture(ps.id);
        Risk_Capture__c rc1=VG_TU.createRiskCapture(ps.id);
        rcList.add(rc);
        rcList.add(rc1);
        VG_Policy_Schedule_Asset__c psa=VG_TU.createPolicyScheduleAsset(ps.id);
        ApexPages.currentPage().getParameters().put('PSId', ps.id);
        ApexPages.currentPage().getParameters().put('MTAType', 'Revision of Cover');
        ApexPages.currentPage().getParameters().put('MTAStartDate', String.ValueOf(Date.newInstance(2017, 12, 18)));
        ApexPages.currentPage().getParameters().put('MTAEndDate', String.ValueOf(Date.newInstance(2018, 12, 18)));
        ApexPages.StandardController stdController1 = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen=new VG_ReviseGentiumSteps_Controller(stdController1);
        VG_Policy_Schedule_Endorsement__c pse1=VG_TU.createPolicyScheduleEndorsement(ps.id);
        VG_Policy_Schedule_Endorsement__c pse2=VG_TU.createPolicyScheduleEndorsement(ps.id);
        Endorsement_Library__c el2=VG_TU.createEndorsementLibrary();
        pse2.VG_Endorsement_Library_Id__c=el2.id;
        update pse2;
        ApexPages.StandardController stdController = new ApexPages.StandardController(ps);
        VG_ReviseGentiumSteps_Controller rgen1=new VG_ReviseGentiumSteps_Controller(stdController);
        for(VG_ReviseGentiumSteps_Controller.WrapperAsset wa : rgen1.waList){
            wa.psa.VG_Policy_Schedule__c=ps.id;
        }
        rgen1.Finish();
        rgen1.MTAType='Revision of Cover';
        
    }
}